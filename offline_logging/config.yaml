# This is a sample configuration file for offline_logging.py
# You can find the latest version of the script, as well as an up-to-date sample configuration file here:
# https://github.com/meraki/automation-scripts/tree/master/offline_logging

# This comfiguration file uses YAML 1.1 format: https://yaml.org/spec/1.1/

# How often to scan Meraki dashboard for updated info, in minutes. Minimum: 5, maximum: 43000
scan_interval_minutes: 60
meraki_dashboard_api:
    # Modify this value to match your Meraki Dashboard API key
    api_key: 1234
    # Modify this value to match the organizationId of the organization you are logging data from
    # To find your organizationId, by calling this endpoint: https://developer.cisco.com/meraki/api-v1/#!get-organizations
    organization_id: 8765
mongodb:
    host: localhost
    port: 27017
    database_name: merakiPython
        
# Which networks to include in scans. If a network has a name, id or tag that matches any of the items in the lists below,
# it will be included in scans. Alternatively, you can set "include_all_networks: true" to log all networks
sources:
    network_names: #list
        - "my network"
    network_ids: #list
    network_tags: #list
        - "offline-logging"
    include_all_networks: false

# Which endpoints of the Meraki dashboard API to scan. Operation names match methods in the Meraki Python module:
# https://github.com/meraki/dashboard-api-python
# Set "enabled: true" for the ones you want to scan and "enabled: false" for the ones you want to omit

endpoints:
    getNetworkClients:
        enabled: true
        collection: networkClients
        mode: append
    getNetworkClientsApplicationUsage:
        enabled: true
        collection: networkClientsApplicationUsage
        mode: append
